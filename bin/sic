#!/usr/bin/python
# This file is part of SafeInCloud database manipulation project.
#
# Copyright(c) 2016 Simone Margaritelli
# evilsocket@gmail.com
# http://www.evilsocket.net
#
# This file may be licensed under the terms of of the
# GNU General Public License Version 3 (the ``GPL'').
#
# Software distributed under the License is distributed
# on an ``AS IS'' basis, WITHOUT WARRANTY OF ANY KIND, either
# express or implied. See the GPL for the specific language
# governing rights and limitations.
#
# You should have received a copy of the GPL along with this
# program. If not, go to http://www.gnu.org/licenses/gpl.html
# or write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
import sys
import os
from os.path import expanduser
import getpass
from termcolor import colored

from xml.dom.minidom import parseString
from sic.decrypter import Decrypter
from sic.entry import Entry
try:
    input = raw_input
except NameError:
    pass

def matches( query, card ):
    try:
        if query is None:
            return True

        query = query.lower()
        if query in card['@title'].lower():
            return True

        # for field in card['field']:
        #     if query in field['@name'].lower():
        #         return True

        #     if '#text' in field and query in field['#text'].lower():
        #         return True
    except:
        pass

    return False

if len(sys.argv) == 2:
    search = sys.argv[1]
else:
    search = None

config_file = os.path.join( expanduser("~"), '.sic' )
if not os.path.isfile(config_file):
    ok = False
    while ok is False:
        db_path = input( "Configuration file not found, please enter the path of your SiC database: " )
        if not os.path.isfile(db_path):
            print( "%s does not exist!" % db_path)
        else:
            ok = True

    with open( config_file, 'w+t' ) as fd:
        fd.write( db_path )
else:
    with open( config_file, 'rt' ) as fd:
        db_path = fd.read().strip()

password = getpass.getpass()

db = Decrypter( db_path, password )
entries = []
xml = db.decrypt()
xml = parseString(xml)

for node in xml.getElementsByTagName('card'):
    is_template = False
    if node.hasAttribute('template'):
        is_template = ( node.attributes['template'].value == 'true' )

    if not is_template:
        entries.append( Entry(node) )

for entry in entries:
    if entry.matches(search):
        notes = None
        print( colored( "%s\n" % entry.title, 'green', attrs=['bold'] ))
        try:
            entry_items = entry.fields.iteritems()
        except AttributeError:
            entry_items = entry.fields.items()

        for title, field in entry_items:
            if field.type == 'notes':
                notes = field
            else:
                print( "%-25s: %s" % ( colored( title, 'grey', attrs=['bold'] ), field.value ))

        if notes is not None:
            print( "%-25s:\n\n%s" % ( colored( 'Notes', 'grey', attrs=['bold'] ), notes.value ))

        print
